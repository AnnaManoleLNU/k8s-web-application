stages:          # List of stages for jobs, and their order of execution
  - build
  - deploy

build_taskit:    # Job name
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  script:  # See https://docs.gitlab.com/ee/ci/docker/using_kaniko.html
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/taskit"
      --dockerfile "${CI_PROJECT_DIR}/taskit/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/taskit:${CI_COMMIT_TAG:-latest}"

build_queue:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/queue"  
      --dockerfile "${CI_PROJECT_DIR}/queue/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/queue:${CI_COMMIT_TAG:-latest}"

build_notification:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/notification"  
      --dockerfile "${CI_PROJECT_DIR}/notification/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/notification:${CI_COMMIT_TAG:-latest}"


deploy:
  stage: deploy
  image:
    name: gcr.io/k8s-skaffold/skaffold:v2.8.0
    entrypoint: ['']
  when: manual
  script:
    - kubectl config get-contexts
   # Configure kubectl to use our own k8s cluster, you need to setup an Gitlab agent in you k8s kluster
    - kubectl config use-context $K8S_CONTEXT
   # Authorize the cluster to pull images from our registry. (synced against Deploy Token "gitlab-deploy-token")
    - kubectl delete secret regcred || true
    - kubectl create secret docker-registry regcred --docker-server=$CI_REGISTRY --docker-username=$CI_DEPLOY_USER --docker-password=$CI_DEPLOY_PASSWORD

    - echo $CI_REGISTRY
    - echo $CI_DEPLOY_USER
    - echo $K8S_CONTEXT
    - echo $CI_COMMIT_TAG
    - echo $CI_REGISTRY_IMAGE
    

    # Build the different images
    - skaffold deploy --profile production --images \
        ${CI_REGISTRY_IMAGE}/taskit:${CI_COMMIT_TAG:-latest},\
        ${CI_REGISTRY_IMAGE}/queue:${CI_COMMIT_TAG:-latest},\
        ${CI_REGISTRY_IMAGE}/notification:${CI_COMMIT_TAG:-latest}
    
   # Debugging outputs after completion
    - kubectl get deployments
    - kubectl get pods
    - kubectl get services
